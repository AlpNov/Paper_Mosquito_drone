(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    145500,       2896]
NotebookOptionsPosition[    143858,       2835]
NotebookOutlinePosition[    144215,       2851]
CellTagsIndexPosition[    144172,       2848]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\

For An :
1.)  calculate the volume of air cleaned by the screen as a function of \
V_robot,horizontal, \[Theta], and s  (fix s< r?)
2.) find exponential fit to mosquito density as function of height
3.) combine 1 and 2 -- what is the optimal configuration
4.)  velocity down is not a constant.... can we make a better
do your best

  
  \
\>", "Text",
 CellChangeTimes->{{3.664559706379416*^9, 3.664559774273353*^9}, {
  3.664559894246208*^9, 3.6645599375078363`*^9}, {3.66456010240893*^9, 
  3.66456010580711*^9}}],

Cell[CellGroupData[{

Cell[TextData[{
 "OptimizeMosquitoDroneConfiguration.nb\n",
 StyleBox["Mosquito Eliminating Screens", "Code"],
 "\n",
 StyleBox["Aaron T. Becker\nSimulates different arrangements of mosquito \
screens and examines how well they work.", "Text"]
}], "Section",
 CellChangeTimes->{{3.66412001256577*^9, 3.664120065293371*^9}, {
   3.6641203100095787`*^9, 3.664120312094975*^9}, 3.664360710177981*^9}],

Cell[TextData[{
 "Assume the drone is a square, with each side 2 ",
 StyleBox["RadRob",
  FontSlant->"Italic"],
 ". \nTo hover, the drone must push air down with velocity ",
 StyleBox["velocity_down",
  FontSlant->"Italic"],
 " to apply a force that cancels the pull of gravity. The drone has mass ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["mRob",
     FontSlant->"Italic"], ".", "  "}], TraditionalForm]]],
 "\n",
 StyleBox["mRob *g = massFlow*velocity_down\nmass * gravity = (density air * \
Area_robotCrossSection* velocity_down)*velocity_down\nkg  ",
  FontSlant->"Italic"],
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"*", 
     FractionBox["m", 
      SuperscriptBox["s", "2"]]}], "="}], TraditionalForm]]],
 " ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      FractionBox["kg", 
       SuperscriptBox["m", "3"]], "*", 
      SuperscriptBox["m", "2"], "*", 
      FractionBox["m", "s"]}], ")"}], "*"}], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   FractionBox["m", "s"], TraditionalForm]]],
 "\nthe units work!\n",
 StyleBox["velocity_down",
  FontSlant->"Italic"],
 " = ",
 Cell[BoxData[
  FormBox[
   SqrtBox[
    FractionBox[
     RowBox[{"mass", " ", "*", " ", "gravity", " "}], 
     StyleBox[
      RowBox[{"density", " ", "air", " ", "*", " ", "Area_robotCrossSection"}],
      FontSlant->"Italic"]]], TraditionalForm]]]
}], "Text",
 CellChangeTimes->{{3.6641201073200493`*^9, 3.664120271782539*^9}, {
  3.664360668225534*^9, 3.6643606777027597`*^9}, {3.664360712489916*^9, 
  3.664360827337554*^9}, {3.664360929597048*^9, 3.664360935989523*^9}, {
  3.664360978742375*^9, 3.664361008559538*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"mRob", " ", "=", " ", "2"}], " ", ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{"kg", ",", " ", 
     RowBox[{
      RowBox[{"https", ":"}], "//", 
      RowBox[{
       RowBox[{"3", 
        RowBox[{
         RowBox[{"dr", ".", "com"}], "/", "solo"}]}], "-", "gopro", "-", 
       "drone", "-", 
       RowBox[{"specs", "/"}]}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"densityAir", " ", "=", " ", "1.225"}], ";", " ", 
   RowBox[{"(*", " ", 
    RowBox[{
     RowBox[{"kg", "/", "m3"}], ",", " ", 
     RowBox[{"Air", " ", "density"}], ",", 
     RowBox[{"like", " ", "air", " ", "pressure"}], ",", 
     RowBox[{"decreases", " ", "with", " ", "increasing", " ", 
      RowBox[{"altitude", ".", " ", "It"}], " ", "also", " ", "changes", " ", 
      "with", " ", "variation", " ", "in", " ", "temperature", " ", "or", " ", 
      RowBox[{"humidity", ".", "At"}], " ", "sea", " ", "level", " ", "and", 
      " ", "at", " ", "15", " ", "\[Degree]C", " ", "air", " ", "has", " ", 
      "a", " ", "density", " ", "of", " ", "approximately", " ", "1.225", " ", 
      RowBox[{"kg", "/", "m3"}], " ", "according", " ", "to", " ", "ISA", " ", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{"International", " ", "Standard", " ", "Atmosphere"}], ")"}], 
       "."}]}]}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{"AreaRobot", " ", "=", " ", 
    SuperscriptBox[
     RowBox[{"(", "0.71", 
      StyleBox[")",
       FontSlant->"Italic"]}], "2"]}], ";"}], 
  RowBox[{"(*", 
   RowBox[{
    RowBox[{"Propellers", ":", 
     RowBox[{"10", "\[DoublePrime]", " ", "diameter"}]}], ",", 
    RowBox[{
     RowBox[{"18", " ", 
      RowBox[{"in", ".", 
       RowBox[{"(", 
        RowBox[{"46", " ", "cm"}], ")"}]}], " ", "motor"}], "-", "to", "-", 
     "motor"}], ",", " ", 
    RowBox[{"28", " ", "inches", " ", "is", " ", "71", " ", "cm"}]}], 
   "*)"}]}], "\[IndentingNewLine]", 
 RowBox[{"velocityDown", 
  StyleBox["=",
   FontSlant->"Italic"], 
  SqrtBox[
   FractionBox[
    RowBox[{"mRob", " ", "*", "9.871"}], 
    RowBox[{"densityAir", "*", " ", "AreaRobot"}]]]}], "\[IndentingNewLine]", 

 RowBox[{
  RowBox[{"(*", 
   RowBox[{"velocity_down", " ", "in", " ", 
    RowBox[{"m", "/", "s"}], "*", "60", " ", 
    RowBox[{"s", "/", "min"}], "*", "60", " ", 
    RowBox[{
     RowBox[{"min", "/", "hr"}], "/", "1000"}], 
    RowBox[{"m", "/", "km"}]}], "*)"}]}]}], "Input",
 CellChangeTimes->{{3.664360847636113*^9, 3.6643609708223877`*^9}, {
  3.6643610154201593`*^9, 3.664361120989786*^9}, {3.664361151956382*^9, 
  3.6643612262918777`*^9}, {3.6643615325159616`*^9, 3.6643615396297407`*^9}, {
  3.664361641871208*^9, 3.664361644935541*^9}, {3.664361692376631*^9, 
  3.6643617104345503`*^9}, {3.664888309916112*^9, 3.6648883118255453`*^9}, {
  3.665485733118107*^9, 3.665485736779086*^9}}],

Cell[BoxData["5.654174149697724`"], "Output",
 CellChangeTimes->{
  3.66436164541348*^9, 3.664361708454626*^9, {3.664888306887659*^9, 
   3.664888317321218*^9}, 3.665366046081871*^9, 3.665484710370335*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{"5.654174149697724`", "*", "60", "*", 
   RowBox[{"60", "/", "1000"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.664361612026099*^9, 3.664361649354003*^9}}],

Cell[BoxData["20.355026938911806`"], "Output",
 CellChangeTimes->{{3.6643616180949907`*^9, 3.664361649699604*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"Clear", "[", 
  RowBox[{"ms", ",", " ", "hTop", ",", "hBottom", ",", "hm"}], "]"}]], "Input",\

 CellChangeTimes->{{3.6648885263594646`*^9, 3.664888540140914*^9}}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"dd", " ", "=", " ", "0.71"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"drone", " ", "diameter", " ", "is", " ", "0.71"}], "*)"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ds", " ", "=", " ", "0.5"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"screen", " ", "diameter", " ", "is", " ", "0.5"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{"hs", " ", "=", " ", "2"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"hd", " ", "=", " ", "3"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"vd", " ", "=", " ", "velocityDown"}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"m", "/", "s"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{"vf", " ", "=", " ", "10"}], ";"}], " ", 
   RowBox[{"(*", 
    RowBox[{"m", "/", "s"}], "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ms", "[", "vf_", "]"}], ":=", " ", 
     RowBox[{"vd", "/", "vf"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{
     "slope", " ", "of", " ", "line", " ", "to", " ", "intercept", " ", 
      "from", " ", "screen", " ", "to", " ", "edge"}], "*)"}], 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hTop", "[", 
      RowBox[{"vf_", ",", "\[Theta]_"}], "]"}], ":=", "  ", 
     RowBox[{"hd", "-", "hs", " ", "+", 
      RowBox[{
       RowBox[{"ds", "/", "2"}], "*", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dd", "/", "2"}], "+", 
         RowBox[{
          RowBox[{"ds", "/", "2"}], "*", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "*", 
       RowBox[{"ms", "[", "vf", "]"}]}]}]}], " ", ";", 
    RowBox[{"(*", 
     RowBox[{
     "top", " ", "of", " ", "area", " ", "of", " ", "mosquitos", " ", 
      "captured"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hBottom", "[", 
      RowBox[{"vf_", ",", "\[Theta]_"}], "]"}], " ", ":=", 
     RowBox[{"hd", "-", " ", "hs", " ", "-", 
      RowBox[{
       RowBox[{"ds", "/", "2"}], "*", 
       RowBox[{"Sin", "[", "\[Theta]", "]"}]}], "+", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"dd", "/", "2"}], "-", 
         RowBox[{
          RowBox[{"ds", "/", "2"}], "*", 
          RowBox[{"Cos", "[", "\[Theta]", "]"}]}]}], ")"}], "*", 
       RowBox[{"ms", "[", "vf", "]"}]}]}]}], " ", ";", 
    RowBox[{"(*", 
     RowBox[{
     "bottom", " ", "of", " ", "area", " ", "of", " ", "mosquitos", " ", 
      "captured"}], "*)"}], "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"hm", "[", 
      RowBox[{"vf_", ",", "\[Theta]_"}], "]"}], " ", ":=", 
     RowBox[{"Abs", "[", " ", 
      RowBox[{
       RowBox[{"hTop", "[", 
        RowBox[{"vf", ",", "\[Theta]"}], "]"}], "-", 
       RowBox[{"hBottom", "[", 
        RowBox[{"vf", ",", "\[Theta]"}], "]"}]}], "]"}]}], ";", " ", 
    RowBox[{"(*", 
     RowBox[{"height", " ", "of", " ", "mosquito", " ", "captured", " ", 
      RowBox[{"area", ".", " ", "Bottom"}], " ", "of", " ", "region"}], 
     "*)"}], "\[IndentingNewLine]"}]}]}]], "Input",
 CellChangeTimes->{{3.66488763734389*^9, 3.664887735693062*^9}, {
  3.664887767258871*^9, 3.664888017438673*^9}, {3.664888104457*^9, 
  3.664888128986722*^9}, {3.664888193686154*^9, 3.6648882828003073`*^9}, {
  3.664888314906375*^9, 3.66488836409103*^9}, {3.66488848633185*^9, 
  3.6648885520364656`*^9}, {3.6648887561564627`*^9, 3.664888774614099*^9}, {
  3.665484607309569*^9, 3.665484702655122*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"vfs", " ", "=", " ", 
   RowBox[{"{", 
    RowBox[{"1", ",", "2", ",", "4", ",", "8", ",", "16"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"Plot", "[", 
  RowBox[{
   RowBox[{"Evaluate", "[", 
    RowBox[{"Table", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"hm", "[", 
        RowBox[{"vf", ",", 
         RowBox[{"\[Theta]", "*", 
          RowBox[{"\[Pi]", "/", "180"}]}]}], "]"}], "*", 
       RowBox[{"(", "ds", ")"}], "*", "vf"}], ",", 
      RowBox[{"{", 
       RowBox[{"vf", ",", "vfs"}], "}"}]}], "]"}], "]"}], ",", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", "180"}], "}"}], ",", 
   "\[IndentingNewLine]", "\[IndentingNewLine]", 
   RowBox[{"FrameTicks", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{"i", ",", 
        RowBox[{"{", 
         RowBox[{"i", ",", "0", ",", "180", ",", "45"}], "}"}]}], "]"}], ",", 
      "Automatic", ",", "Automatic", ",", "Automatic"}], "}"}]}], ",", 
   RowBox[{"Frame", "\[Rule]", 
    RowBox[{"{", "True", "}"}]}], ",", 
   RowBox[{"FrameLabel", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
     "\"\<\n\n\nScreen Angle \[Theta] (\[SmallCircle])\>\"", ",", 
      "\"\<Volume Cleared (\!\(\*SuperscriptBox[\(m\), \(3\)]\)/s)\>\""}], 
     "}"}]}], ",", 
   RowBox[{"PlotLegends", "\[Rule]", 
    RowBox[{"Placed", "[", 
     RowBox[{
      RowBox[{"Table", "[", 
       RowBox[{
        RowBox[{"StringForm", "[", 
         RowBox[{
         "\"\<\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s\>\"", ",", "vf"}], 
         "]"}], ",", 
        RowBox[{"{", 
         RowBox[{"vf", ",", "vfs"}], "}"}]}], "]"}], ",", 
      RowBox[{"{", 
       RowBox[{"0.86", ",", "0.65"}], "}"}]}], "]"}]}]}], 
  "]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.664888131619647*^9, 3.66488818693281*^9}, {
  3.664888564574073*^9, 3.664888604901555*^9}, {3.664888698556567*^9, 
  3.664888742675075*^9}, {3.6648887795018797`*^9, 3.664888941147297*^9}, {
  3.664888979293832*^9, 3.664889049230871*^9}, {3.6648890960675383`*^9, 
  3.6648891609010887`*^9}, {3.664889219565279*^9, 3.664889220561557*^9}, {
  3.664889306646463*^9, 3.6648893694895077`*^9}, {3.6653660331803703`*^9, 
  3.6653660340547743`*^9}, {3.665484724929447*^9, 3.665484726664557*^9}}],

Cell[BoxData[
 TagBox[
  GraphicsBox[{{{}, {}, 
     {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
o0LsWFP3f//X/B8Pp6XC
       "]]}, 
     {RGBColor[0.880722, 0.611041, 0.142051], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
Tg==
       "]]}, 
     {RGBColor[0.560181, 0.691569, 0.194885], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
kv6Ol705Yzqnloa5jKH6v/MHRLqo5t0l6x2LG/v7/MYttWIWD2hot/CWxhpi
iWXLJoae0PC6WvCB5cScT4d7kl7R0GN5S/0i4vKyl3d0+mn48Ha++OzfeIXr
5r36QsPVK1ftHf4bL8uU+LARGob5qnT0El+RHg+Qm6Rh3/QDvVbiiQHb7S1/
aLicJlhwg9is9Iahz3w6TvS8kEsnTjsqJie6mI5CMYycY8SDLP95N6To+FBp
2zp34vj+9U8mlejYGEq3USDuvR5fmaFGR/NCzZHZv/lz5OtF0KGjTkPLhV7i
DomrXrEMOkYu/jqdQCz7dp7VeivSPhBexSH2L/TUfGxHx+G2e2F6xOIMBUqa
Q8fyuCDZVyR/u/YFfNPfQ8f2Dg/Xa8Qp6XWvnQPpKODcOxhCvGzYsTo7nI6a
3n4v/iVW+O/0wbUZdDRau19Km+yHj82vPM3/R8flVRMXJ8j+ujq8xsH3Gh21
k1fuqSJWM23ULqmio3yJ2ztdYt2RXyO6z+mYoqirI0v269Qy+rsdvXRUHTae
fUb2e63p2c4jA3RUebFgSRyxycV1xfWjdLz/WVDqOzkfzJlsX+YiBjok/47K
JOeJc0brRwczBpasq1tYXEDByvuSzw9tZWDCP4e9WMTvRt2b0x0YuFxim3A/
Oc88zWZy+jik3cN3nSjxvp+arp4RDBRYLd1jTc7HSNbF10HVDMyc9KBO5pDz
6sCXtgt3GNgysuqbILFQlk511X0G+u/wVjh+mYJTY52p1HMGPvjdFnDoEjkf
swQdTvxk4HP7svAtWWQ/jft1JquaIrOiLjg/nYL7aiu6krRM8WXbRZlFxINe
D14k6pti3JW8pQfSSLxerXkTb2aKQlVc5U2pJB/r3n6P4phil8ClxOLzFNyJ
thEJumiKu5UiT1olUtDf8Ed0f44p+kVVvks7Q8HcqeviAQWmOKZYlTqQQPLP
V0Rm7y1TNDlmKRN0moJH25rWenSZYrLUZ9/IOFJvluqY2i9g4oDzlx1bSD3k
2wywbCWY+C1H+WD4cRLP+CQraxkm/iobGi6JpMBtZsjOai0T42r0phZEkHrZ
n+fOoDNxS6WqRympr+PXlkZsDGWi6v3PeddIfV5kRNUs+cbEz0WBJp6k3vt+
GPl87ScTB51zZq08STziPy7BaSbaCC14oUXuB+GvO/b5CZuhd1JX3aQbqU+H
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
1GwEF3NDXjT9/f/r//vUKrQ=
       "]]}, 
     {RGBColor[0.922526, 0.385626, 0.209179], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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
+Wbx//8/+x/uzH7L
       "]]}, 
     {RGBColor[0.528488, 0.470624, 0.701351], AbsoluteThickness[1.6], Opacity[
      1.], LineBox[CompressedData["
1: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

       "]]}}, InsetBox[
     TemplateBox[{
      InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \
\\(f\\)]\\)=\\!\\(TraditionalForm\\`1\\)m/s\"", 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 1], Editable -> 
        False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \
\\(f\\)]\\)=\\!\\(TraditionalForm\\`2\\)m/s\"", 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 2], Editable -> 
        False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \
\\(f\\)]\\)=\\!\\(TraditionalForm\\`4\\)m/s\"", 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 4], Editable -> 
        False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \
\\(f\\)]\\)=\\!\\(TraditionalForm\\`8\\)m/s\"", 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 8], Editable -> 
        False],InterpretationBox[
       "\"\\!\\(\\*SubscriptBox[\\(v\\), \
\\(f\\)]\\)=\\!\\(TraditionalForm\\`16\\)m/s\"", 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 16], Editable -> 
        False]},
      "LineLegend",
      DisplayFunction->(FormBox[
        StyleBox[
         StyleBox[
          PaneBox[
           TagBox[
            GridBox[{{
               TagBox[
                GridBox[{{
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #3}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #4}, {
                   GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.5], 
                    Opacity[1.], 
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #5}}, 
                 GridBoxAlignment -> {
                  "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                 AutoDelete -> False, 
                 GridBoxDividers -> {
                  "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                 GridBoxItemSize -> {"Columns" -> {{All}}, "Rows" -> {{All}}},
                  GridBoxSpacings -> {
                  "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
             GridBoxAlignment -> {"Columns" -> {{Left}}, "Rows" -> {{Top}}}, 
             AutoDelete -> False, 
             GridBoxItemSize -> {
              "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
             GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}], 
            "Grid"], Alignment -> Left, AppearanceElements -> None, 
           ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
           "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
         FontFamily -> "Arial"}, Background -> Automatic, StripOnInput -> 
         False], TraditionalForm]& ),
      Editable->True,
      InterpretationFunction:>(RowBox[{"LineLegend", "[", 
         RowBox[{
           RowBox[{"{", 
             RowBox[{
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.880722, 0.611041, 0.142051], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.587148, 0.40736066666666665`, 0.09470066666666668], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.880722, 0.611041, 0.142051]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.880722, 0.611041, 0.142051]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.880722, 0.611041, 0.142051], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.560181, 0.691569, 0.194885], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.37345400000000006`, 0.461046, 0.12992333333333334`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.560181, 0.691569, 0.194885]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.560181, 0.691569, 0.194885]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.560181, 0.691569, 0.194885], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.922526, 0.385626, 0.209179], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.6150173333333333, 0.25708400000000003`, 
                    0.13945266666666667`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.922526, 0.385626, 0.209179]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.922526, 0.385626, 0.209179]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.922526, 0.385626, 0.209179], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
               ",", 
               RowBox[{"Directive", "[", 
                 RowBox[{
                   RowBox[{"Opacity", "[", "1.`", "]"}], ",", 
                   InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    RowBox[{
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.528488, 0.470624, 0.701351], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[
                    0.3523253333333333, 0.3137493333333333, 
                    0.46756733333333333`], FrameTicks -> None, 
                    PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{
                    Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "\[InvisibleSpace]"}], 
                    "RGBColor[0.528488, 0.470624, 0.701351]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.528488, 0.470624, 0.701351]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.528488, 0.470624, 0.701351], Editable -> False,
                     Selectable -> False], ",", 
                   RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}]}],
              "}"}], ",", 
           RowBox[{"{", 
             RowBox[{#, ",", #2, ",", #3, ",", #4, ",", #5}], "}"}], ",", 
           RowBox[{"LabelStyle", "\[Rule]", 
             RowBox[{"{", "}"}]}], ",", 
           RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], "]"}]& )], 
     Scaled[{0.86, 0.65}], ImageScaled[{0.5, 0.5}],
     BaseStyle->{FontSize -> Larger},
     FormatType->StandardForm]},
   AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
   Axes->{True, True},
   AxesLabel->{None, None},
   AxesOrigin->{0, 0},
   DisplayFunction->Identity,
   Frame->{{True, True}, {True, True}},
   FrameLabel->{{
      FormBox[
      "\"Volume Cleared (\\!\\(\\*SuperscriptBox[\\(m\\), \\(3\\)]\\)/s)\"", 
       TraditionalForm], None}, {
      FormBox[
      "\"\\n\\n\\nScreen Angle \[Theta] (\[SmallCircle])\"", TraditionalForm],
       None}},
   FrameTicks->{{Automatic, Automatic}, {{{0, 
        FormBox["0", TraditionalForm]}, {45, 
        FormBox["45", TraditionalForm]}, {90, 
        FormBox["90", TraditionalForm]}, {135, 
        FormBox["135", TraditionalForm]}, {180, 
        FormBox["180", TraditionalForm]}}, Automatic}},
   GridLines->{None, None},
   GridLinesStyle->Directive[
     GrayLevel[0.5, 0.4]],
   Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
   PlotRange->{{0, 180}, {0., 4.242417339037031}},
   PlotRangeClipping->True,
   PlotRangePadding->{{
      Scaled[0.02], 
      Scaled[0.02]}, {
      Scaled[0.05], 
      Scaled[0.05]}},
   Ticks->{Automatic, Automatic}],
  InterpretTemplate[Legended[
    Graphics[{{{}, {}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
o0LsWFP3f//X/B8Pp6XC
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
Tg==
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
kv6Ol705Yzqnloa5jKH6v/MHRLqo5t0l6x2LG/v7/MYttWIWD2hot/CWxhpi
iWXLJoae0PC6WvCB5cScT4d7kl7R0GN5S/0i4vKyl3d0+mn48Ha++OzfeIXr
5r36QsPVK1ftHf4bL8uU+LARGob5qnT0El+RHg+Qm6Rh3/QDvVbiiQHb7S1/
aLicJlhwg9is9Iahz3w6TvS8kEsnTjsqJie6mI5CMYycY8SDLP95N6To+FBp
2zp34vj+9U8mlejYGEq3USDuvR5fmaFGR/NCzZHZv/lz5OtF0KGjTkPLhV7i
DomrXrEMOkYu/jqdQCz7dp7VeivSPhBexSH2L/TUfGxHx+G2e2F6xOIMBUqa
Q8fyuCDZVyR/u/YFfNPfQ8f2Dg/Xa8Qp6XWvnQPpKODcOxhCvGzYsTo7nI6a
3n4v/iVW+O/0wbUZdDRau19Km+yHj82vPM3/R8flVRMXJ8j+ujq8xsH3Gh21
k1fuqSJWM23ULqmio3yJ2ztdYt2RXyO6z+mYoqirI0v269Qy+rsdvXRUHTae
fUb2e63p2c4jA3RUebFgSRyxycV1xfWjdLz/WVDqOzkfzJlsX+YiBjok/47K
JOeJc0brRwczBpasq1tYXEDByvuSzw9tZWDCP4e9WMTvRt2b0x0YuFxim3A/
Oc88zWZy+jik3cN3nSjxvp+arp4RDBRYLd1jTc7HSNbF10HVDMyc9KBO5pDz
6sCXtgt3GNgysuqbILFQlk511X0G+u/wVjh+mYJTY52p1HMGPvjdFnDoEjkf
swQdTvxk4HP7svAtWWQ/jft1JquaIrOiLjg/nYL7aiu6krRM8WXbRZlFxINe
D14k6pti3JW8pQfSSLxerXkTb2aKQlVc5U2pJB/r3n6P4phil8ClxOLzFNyJ
thEJumiKu5UiT1olUtDf8Ed0f44p+kVVvks7Q8HcqeviAQWmOKZYlTqQQPLP
V0Rm7y1TNDlmKRN0moJH25rWenSZYrLUZ9/IOFJvluqY2i9g4oDzlx1bSD3k
2wywbCWY+C1H+WD4cRLP+CQraxkm/iobGi6JpMBtZsjOai0T42r0phZEkHrZ
n+fOoDNxS6WqRympr+PXlkZsDGWi6v3PeddIfV5kRNUs+cbEz0WBJp6k3vt+
GPl87ScTB51zZq08STziPy7BaSbaCC14oUXuB+GvO/b5CZuhd1JX3aQbqU+H
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
1GwEF3NDXjT9/f/r//vUKrQ=
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1: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
+Wbx//8/+x/uzH7L
         "]]}, {
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]], 
        Line[CompressedData["
1:eJwV13k4lN0bB3B7isyDbIUipGQN5aWeO1sYyzxjzVIYRt42oZISKUQiS2RX
IiKyRNlCyi7ZQhTZlyR7+PE7719zfeZc1znnmXPu7/2MmONlqjMTAwODCiMD
w3+fV1rlDpS0tZ54Of1TcDBpGV8c1Rd31M7Bz4a0FGS+WsZjYr/5SWiX42/u
3Z6+XLGMu7hJvGbVbsYtU2xV1vqX8bb++lPLWv343hxZbHPPCs7CmxA1qzWD
96aFctTEreCicvfeTWlt4OFKfK7K0at4dplX84QWJyyGCAY/vLeGH/L67PiP
pwgEWvqcX366iVeVkkQNhiShVu/HPWZZRigS/HT+wchhgDH/doHfTFBjtbS1
hivB8y/Tvu9rWGBqQPXkm2YVYNz9qknYkQ38/PIk76WrgWlI9Kw9BzuUUfP+
sbtwHIIEs+KnIrbDN7nLaSI3ANw+OTImjuwATEt8nd9RE/LIW9aXVDkhfeFC
a+QhbfBMqSR9N9sJOzXW3/FO6cC7mUrcneCCw7ySK8mfTwF5eMa/UZMEa4Ls
coXdp0DXtcR/py4J6kWnneoGTkGBTlacsT4JnA7lt/+ePgVVGUc5m0xIkHjy
eC6w68H6rmubObYk4HQzd/4JelAuFj296xoJZpoDOiQL9GBAySTc4wUJsgPH
8nKi9SH6UUmTAhMGRWsk7HSiPsRVMmkVMGNQfknNjfW5PqQYyUYrsWLQahGq
cKZQHypOF3yQZ8dgXkopn9SuD7stfMyEuTA4VudT4E4yAJUkZ8lKIQw+beN7
cyzEANyKjZr2K2Dw+eYJvtEIA1g8Umjgp4hBz2+XqxFxBvC8JTf1mxIGU19L
VaYykStY2sJUMNiZaV+cUGcA+buuq43/g4GZXk7JJgsZNkYExO11MBi6r1Va
60sG3/CqtCunMTDgaJUzCiJDnq67UJo1BgUPrdK6wsjwjiHrYocNBv6RF0PH
ksgw5EzkK5zBQDwx9gx7ORme5OukDThiQMubZjJcJYPi/8r2Ml7AYLQritzh
ZgjWjOuzF30wMLYSrbLxMoTLBZxcN29jUNyXqTziawiac9Lbg3wxCPxRIbIU
ZgjO7EejEu5gIDU5/pv/lSHYfHmxWByAgcuGerT1pCEsGJMGih9iMCk+0j/k
YAQpm28b+hIxqGG2s5k4ZwQWb9bTC5MwSBzp6p29bAQfSi75P0jGgJJR173u
YwQMNfnqx1LR+gez2/jijSBPTTs3IA2DuwrutfrtRsCXHX5/LgsDkRMMOfma
xsD9OqKctRiDZdEbh97qGwMROhRYidy29SezkmIMXw8OmlwrweBe9XB60xlj
sPavGPj5Fp2Hdl3KqLcxpG19Gs8rw6CEHBYlVGgMAa9Ls4WqMSBOC9+8s98E
2hh9s2WaMKBnfhPfJ2MCin2BvF+QvVfiGyuVTMBu0o58tRmDZ4+Fdm+cNAEZ
ffKh0hYMFr/wv7tmbwJFpOE0lTYMnhhwr5xPMoH3541uLXRikBPXlrwj3QSc
c1n7A7owqJ4I183KMYGkMwM7BLrR/gK5YsbKTOD7tpoula8YaHzgUHHoMwEv
Vd29zr0YzIncVcvmoMD5xFyvkAG0n4+OD71JFNg8V/5x+3cMWC5qDunzUsDi
vMlQELJQOWPwxG4K2F4fuuv3AwNNa78eyUMU0FOsvkobwiA6xud6qh4FerV5
WOdGMBA9Ydd02ZAC0ZKeqrajGGSOauzFKRRITu1WqUOuUN74NGBJAS5l3+S4
MQzG2r3597hQYFzxEb/CBKoXktebxwEU2Mi4m7B/GoP1UWMuiWAK/JBTrL2G
XFku6VIQSoGjTpND9cja/3YIfo6iAGQ5b7jOoPvwUe4W+zMKCC4yv0r5hQFv
ImtXTDoF+ppu+Uwhd7v3y0pmUWAqtVdTeRYD230hP06+pkDCftmcWuRzN0c1
b1ai9fWrVnt+YyBDLU/YXkOBp5YDl/fMYTArHbUY+5ECrG1l32yRPbsho6iZ
Aq/nciL6kf0UE7fP9lHgitDC1c9/0PmNU9vsV9DvZ/ld+O4CBjaVBw/+XqNA
7knq9yJk0ccM/j6bFLjXbBw9ivxcM/dIPCsBDO1dA1qLGLxO2h7bwUuAcULT
2AKyh+fgbwcBAtz5lA1FljBQJZfoze0mwOAvV4YOcvmq0xqnOAF/9/AcjUKu
N62y01UgYEWNs1VsGYMHh2KLO48QsLr2sVsT2ZjxEol2lICjXIMdjsiduXuq
fU8QIHhaNjsFOTZgXohLk4C6NtuAcmRr2wb3RB0COnaPmvYgD26/LvHOkIBo
m78tnCsYpA0a+ZyioP3y+9+QRKaXSHR3mRLgIWMndBx5xqk9aN6aAP9nLKqu
yHnqWYN+Zwi4ZNha4IPszuOnRnIkoH5wZH8E8sp72WkZVwJ0uRZ/FiH3tLyw
YrtIQLNg6p1PyG+/iX0adCPgwrnl0W7kJ5MJR8o8CbjdskQaQ/Za4Xv62IsA
PvmkrQVkK9ZHXG63CGB7MF3EsIqBGu+OWwZ+BIwt/ZDnRN4tdm9S4h4BrAk3
3PiR1+Q2LbaCCLheXnJtL3Kfhldt7wMCSIVxmgeQywzmFYvCCbCbFe2URU60
upASFkVA0aKuzBHkW/QxTtdYAvbTuPWOItt62ntrJRBw65fPoX+Qj/v3jYuk
EEA5E9qujiz6yMx89RkBszEaoIG8mdRa055BgEt4mMd/49+z9RRevSQgxML/
ghry+3c1SUG5BIxzC8qoIqfWaXA4FhDQ8j+TPEVkv65iL41iAsgXD/2VQbYf
VhjjLyVAofEFuyQy/Hlp+qeCgB2P6weEkfdtSVQ3VRMg7fzQixeZcWeKXMZH
AmImlnvYkX/uFkr0ayBAfIR1awP9njXSUdttWgiwOlI29Rv5merO6ypfCAis
F0gcQvbXDhohdRHwJkeYtx3ZkcpIneohoGCr0aQaWcv+5vvafnQeq/upecgs
ty7H3xgh4LHEtxdByCPBk9vMJghIOaqxfgX5YyztqtwM8iujXTbIgYWWlOEF
dN+878ce/O++VX+pqFghoMb5DSMJ+dRnssyTdbT+QJziArqv7NM4mxEzFRpj
In6WIE+svvM4sI0K6eJZtCfIDWzKQ4wcVDjX5vfyOnKIuHR5MQ8VNMW8g5WQ
Oawx933iVHh2uz80DtXXjEvIjzVJKrA4aGi4ITdfZTHqOkiFzI4r+f/VY2jE
6oEQRSr0t7n+mkH1y9UwOLAAVNizPJl9GHm225rcqk2FgEAi5C+q/88jnW8z
9agQVJsl9xH5EUNDlB2FCt1B6g1WyDzH8vXrzlKhq9dU98o86tctNtXhNCoU
xYZ5qCArObKpWblQYTZezn0V5Q811EZ68hIVmELzhr2RIwdZt3HcpoKvm+KT
KyiveIOta40TqXDrhB1ZCuWfhCirhkAqFbj2CkV8RXmpXJhX+CONCoMn7mcG
IZsNsKS5ZVOBMSnGcATlbbRi3p3IUiqw8/H9G47yeFcfM97dg+Y/PLGVg/Jc
4nJucXI/FbTXn9HIyMosp+VcBqkgL+QZNzGO5pPLFVkdp0LzuOfNvcjR/lYb
QitUKJ0rFvJF/YJP5tU7Oz5TiK8r+Mj6EwP+WxbKo4QpdD8P4VXsw+AsrL6+
YG4Kxu46YwWov2WyxMsuWpkCs6RY4RFktYcDUsz2pqAta62u1IPqL9lJSOyS
KeybzGXbj/plWpX7pm2IKaTLr4Z3fMFAgTW8vrPGFBK9FzPd6jG40aCgY/vJ
FMreLH3+Uofu+8P26uEGU/AvkJ1XRDbl5y+bbzOF2vZz0r8/YnDtQNIr7Icp
ZFL22tl9QP1OPzvScN0Urp04M8deid7Hwupsa4+YwU6/yW1JBSjfgzlnY4+a
wafGR34t+ej5Agjf8+pmYMymUb/xGoPhm9+e8miZQdTf3lrLPJQnrr/H7Klm
0Hi0z3MrG4NcbYEr/3Mzg21P6RV86eh+rNMDVHPNIDVtxf5MDMq/5Wz+HQVm
sLs0qefcY5Qff+ZeDLwxg/95Gou5R2OQPeHdeK/CDKSt+aXuRKJ+2h1G6mg2
A0cZpa1HYeh58ovjLk+bgS+Xx9b1QAx6XdhyM6XNQYjRpIx2Fc0fqamtftgc
JNxLyDaeaP8Vt/ta5M0hzJivm/BA58uzwragag41Lgs96lfQ+1X5+NnjOuaw
4ssRx3wR9SfuBu52B3Pg6fLgdnRCeV724Op6vDmQuyttbagoz0ncx413WkD1
rPJZLZn/6ttnoBWzgIjVGg+GQxioeEz5mOyyAA7y5KNyaQzauz9UUvZYwFFj
w1FFKfS+nHwNTA9aQFfGw1VMDOXR4X4tKx0L+Dyk0ZfKj8EF/RcGjj4W0GZh
JMDOiMHJu8etrv2ygPRXVfvm00mgU3k0MW3QEsgVvztla7ngRt3/RCI/WEHb
5AOV4+07YfuTiPqAd6ehN+7sBkc2J/grn9paf2kNzfbdm/tcOUAmpd7jSKgN
OKRdDb8gtgMUvghwu/nZwp/fe8Yin7KD8xelmYtOdvBF5t+/62Lb4G7SZdNZ
rTMg25NQ8C6KFTYUvIc9VM9Ct93XzH+bmcFUP9PKjtMe7ufwekSTmND3a6bM
QfYw/dP3ZqAQA1w5rTQb/NcejDXZ33Od28AZ1W+2fnF1gOfk49XB6P/gCQYZ
rcRhB0jxyOTxM13Eo3KqLE6ZO0LmVPCovu4cHqNRsenZ5gghsckORanjeFhB
4wxNnwYj4SHa+UEDOJPf5qEDZBp4dWQuaeoM4NeMlFynDGlgbzEy2M40gJ+d
iBt1o9CgXLD56i+fflxB1PW7jyUNrNx5d3B5fsPbg7e1xTrTgBJ625HBvhfn
d9AubLpDA/aLVds+qXbhIXJef8Lu0mAjxr9RarET31zPlqcG0OC+/Gm9wPxO
fDyGN6fnPg1Yzp4LOHm4E3/b/PP5aDgNPD/zXssS68Ctj92J2UqiQbQgS6km
5xc8mVR540gpDQSvdkpeqm7An3pp1QiX06CtoOx3jkID/nyofgdbJQ2kG2mz
kyn1+MvCjoSeahrA2SOFZ27X4cWWkxU+DWj9X343ldU/4i0pu5jqe2jw6E0p
Z3xRFd7GHm+Q34een4NrtWp/Fd5+ZW9UfD8yu453i+R7vEfrkMTFQTRf+PN1
u5/l+Mg4rsszQYPUROoi3eYtviF/PsR2hQZVzMdjzeNz8a0nc+06f9H41hZn
mUUOzsR0bY/8OprvhvBtUd6XOHunXw7jFvLu2ys/HqTjHMfZlqYYnCA1l6Ce
0EvDuTIeHO9kcgK/yASjBJan+C6vmNYMNieAp/aP09ae4AJDewQesaPx0l0n
LD2i8d0GT8/e2OEEDDdGhnl6wnGRQqlMR05kM+5tVxsC8X3COXNkLmRaMl/2
1Zv4/gBFNRUM+ckSpfO1Iy41W3xHlAe5ked7brADftBSo3HbLuQLeXTBn974
4apqnj98yNrCpdm+gbj8wVM2fQLIXIUZ+mHhuFJkc9oHIbQ/j80sd+No/JjT
V+UYETQ+w5+73S4J12b/ZaEu6QRVfdMsXBUvcBuKYEKAMtr/51LPnzNF+BpF
iG6sisbf14v9u/4Gjyd2KwoccwIKf/CVue0leA9VuC5T3QkwweU3q1LvcAvz
fQtNmk7g9sl6Y8m+AqdYS5N5CCdgF1FzMZiqwXWdjq0nX3SC+7enmVdsm3BF
LyubtxlOkBnyt9dKtBtfD8hyyOF3hkSZFdE08jDucd1hQ/yRM5Dbss6IS83g
zJQtFW9GOvQLDreelZrHOf3ZjTyZ6bBRGs588dg8vquI2+kSKx3+9H7t9DKY
x6UEJSIdt9OhOa/0VOiledxgUG/WgJsObMmE3rPiefyRW2TGHjE6hGhY3AnW
XcCFIyQFKoAOGh67jqs7L+KSH+TkSjTpELubsBO6vojLLR3Vydemw7/i9rNL
9xdx/LSBR7oeHV5/v2v3MmcRdxS7/PkhhQ6Joa36DIuLeFb+26Az9nRodfzn
0Fn/JbxguDrZypEOY0RE0f7oJbyUr+kN1YkOXANM8WPpS3jzjYFh3XN08D7Q
7ObSsITPnWQCeTc67FHfI22OLeN/PTgsD7rTwa/X1ZlTfBlnyth1ab8nHSZE
mBeqjyzjvDsOJAp40SFpx+u/ByyXcWENhUJubzrYnOB26zm3jEtcUmvkuEUH
fXkrxSDvZVw2VXOI9TYdpJdlNJRDl3HVdvLqli8djrUcCf+RtIz/H9ZWs+c=

         "]]}}}, {
     DisplayFunction -> Identity, AspectRatio -> GoldenRatio^(-1), 
      Axes -> {True, True}, AxesLabel -> {None, None}, AxesOrigin -> {0, 0}, 
      DisplayFunction :> Identity, Frame -> {{True, True}, {True, True}}, 
      FrameLabel -> {{
        "Volume Cleared (\!\(\*SuperscriptBox[\(m\), \(3\)]\)/s)", None}, {
        "\n\n\nScreen Angle \[Theta] (\[SmallCircle])", None}}, 
      FrameTicks -> {{
        Automatic, Automatic}, {{0, 45, 90, 135, 180}, Automatic}}, 
      GridLines -> {None, None}, GridLinesStyle -> Directive[
        GrayLevel[0.5, 0.4]], 
      Method -> {
       "DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None}, 
      PlotRange -> {{0, 180}, {0., 4.242417339037031}}, PlotRangeClipping -> 
      True, PlotRangePadding -> {{
         Scaled[0.02], 
         Scaled[0.02]}, {
         Scaled[0.05], 
         Scaled[0.05]}}, Ticks -> {Automatic, Automatic}}], 
    Placed[
     Unevaluated[
      LineLegend[{
        Directive[
         Opacity[1.], 
         RGBColor[0.368417, 0.506779, 0.709798], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.880722, 0.611041, 0.142051], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.560181, 0.691569, 0.194885], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.922526, 0.385626, 0.209179], 
         AbsoluteThickness[1.6]], 
        Directive[
         Opacity[1.], 
         RGBColor[0.528488, 0.470624, 0.701351], 
         AbsoluteThickness[1.6]]}, {
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 1], 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 2], 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 4], 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 8], 
        StringForm["\!\(\*SubscriptBox[\(v\), \(f\)]\)=``m/s", 16]}, 
       LabelStyle -> {}, LegendLayout -> "Column"]], {0.86, 0.65}, 
     Identity]]& ],
  AutoDelete->True,
  Editable->True,
  SelectWithContents->False,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.664889324491695*^9, 3.6648893698342*^9}, {
  3.66536603508123*^9, 3.665366048439587*^9}, {3.665484706936137*^9, 
  3.6654847272604923`*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["\<\
Data from 1976 \[OpenCurlyDoubleQuote]Vertical Distribution of some West \
African mosquitos (Diptera Culicidae) over open farmland in a freshwater area \
of the Gambia\[CloseCurlyDoubleQuote]\
\>", "Subsection",
 CellChangeTimes->{{3.664905279329761*^9, 3.664905338344343*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", 
   RowBox[{
    RowBox[{
    "data", " ", "expressed", " ", "as", " ", "a", " ", "ratio", " ", "of", 
     " ", "catch", " ", "at", " ", "1", "m"}], ",", " ", 
    RowBox[{"all", " ", "experiments", " ", "combined"}]}], "*)"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"hINm", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0.5", ",", "1", ",", "1.5", ",", "2", ",", "3", ",", "4", 
       ",", "5", ",", "6"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Aedes", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "8.56", ",", "3.33", ",", "1", ",", "1.02", ",", "0.37", ",", "0.36", 
       ",", "0.47", ",", "0.15", ",", "0.2"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"MansoniaSpp", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "4.59", ",", "2.03", ",", "1", ",", "0.71", ",", "0.51", ",", "0.25", 
       ",", "0.15", ",", "0.09", ",", "0.04"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Aziemanni", " ", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "4.61", ",", "1.38", ",", "1", ",", "1.14", ",", "0.64", ",", "0.52", 
       ",", "0.24", ",", "0.09", ",", "0.07"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Apharoensis", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "5.02", ",", "1.84", ",", "1", ",", "0.83", ",", "0.67", ",", "0.42", 
       ",", "0.54", ",", "0.21", ",", "0.14"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"ASquamosus", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "5.17", ",", "1.94", ",", "1", ",", "0.82", ",", "0.68", ",", "0.24", 
       ",", "0.12", ",", "0", ",", "0.12"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Afunestus", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0.96", ",", "1.26", ",", "1", ",", "0.56", ",", "0.5", ",", "0.25", 
       ",", "0.16", ",", "0.12", ",", "0.07"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Agambiae", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "1.52", ",", "1", ",", "0", ",", "0.63", ",", "0.62", ",", 
       "0.47", ",", "0.51", ",", "0.07"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Cneavei", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "2.51", ",", "0.8", ",", "1", ",", "1.35", ",", "1.09", ",", "1.42", 
       ",", "0.97", ",", "0.57", ",", "0.51"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Cthalassius", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "0", ",", "0", ",", "1", ",", "0", ",", "0.57", ",", "0.33", ",", 
       "0.53", ",", "0.38", ",", "1.43"}], "}"}]}], ";"}], "\n", 
   RowBox[{
    RowBox[{"Cpoicilipes", "=", " ", 
     RowBox[{"{", 
      RowBox[{
      "1.19", ",", "0.69", ",", "1", ",", "1.33", ",", "0.98", ",", "1.71", 
       ",", "4.19", ",", "2.52", ",", "5.91"}], "}"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{"PlotPts", " ", "=", " ", 
    RowBox[{"ListPlot", "[", 
     RowBox[{
      RowBox[{"Transpose", "[", 
       RowBox[{"{", " ", 
        RowBox[{
         RowBox[{"Normalize", "[", "Aedes", "]"}], ",", 
         RowBox[{"hINm", "+", 
          RowBox[{"0.15", "/", "2"}]}]}], "}"}], "]"}], ",", 
      RowBox[{"AxesOrigin", "\[Rule]", 
       RowBox[{"{", 
        RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
   RowBox[{"ListPlot", "[", 
    RowBox[{
     RowBox[{"Transpose", "[", 
      RowBox[{"{", " ", 
       RowBox[{
        RowBox[{"hINm", "+", 
         RowBox[{"0.15", "/", "2"}]}], ",", 
        RowBox[{"Normalize", "[", "Aedes", "]"}]}], "}"}], "]"}], ",", 
     RowBox[{"AxesOrigin", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}]}]], "Input",
 CellChangeTimes->{{3.664905431319662*^9, 3.664905815003956*^9}, {
  3.6649062693495417`*^9, 3.664906311945747*^9}, {3.664982949880508*^9, 
  3.664983118868423*^9}, {3.6649833779651327`*^9, 3.664983382299478*^9}, {
  3.664983529494657*^9, 3.6649835383122168`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.9179773781578602, 0.075}, {0.35711035855907414`, 0.575}, {
      0.10724034791563787`, 1.075}, {0.10938515487395063`, 1.575}, {
      0.03967892872878601, 2.075}, {0.03860652524962963, 3.075}, {
      0.05040296352034979, 4.075}, {0.01608605218734568, 5.075}, {
      0.021448069583127574`, 6.075}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.9179773781578602}, {0., 6.075}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6649830542391167`*^9, 3.6649831192045937`*^9}, 
   3.6649834112633123`*^9, 3.664983538723996*^9}],

Cell[BoxData[
 GraphicsBox[{{}, {{}, 
    {RGBColor[0.368417, 0.506779, 0.709798], PointSize[0.019444444444444445`],
      AbsoluteThickness[1.6], 
     PointBox[{{0.075, 0.9179773781578602}, {0.575, 0.35711035855907414`}, {
      1.075, 0.10724034791563787`}, {1.575, 0.10938515487395063`}, {2.075, 
      0.03967892872878601}, {3.075, 0.03860652524962963}, {4.075, 
      0.05040296352034979}, {5.075, 0.01608605218734568}, {6.075, 
      0.021448069583127574`}}]}, {}}, {}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 6.075}, {0., 0.9179773781578602}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.6649830542391167`*^9, 3.6649831192045937`*^9}, 
   3.6649834112633123`*^9, 3.6649835387904453`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"data", " ", "=", " ", 
  RowBox[{"Transpose", "[", 
   RowBox[{"{", " ", 
    RowBox[{
     RowBox[{"Normalize", "[", "Aedes", "]"}], ",", 
     RowBox[{"hINm", "+", 
      RowBox[{"0.15", "/", "2"}]}]}], "}"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"nlm", "=", 
  RowBox[{"NonlinearModelFit", "[", 
   RowBox[{"data", ",", 
    RowBox[{"{", 
     RowBox[{"a", " ", 
      RowBox[{"Exp", "[", 
       RowBox[{
        RowBox[{"-", "k"}], " ", "h"}], "]"}]}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "10"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"k", ",", 
        RowBox[{"1", "/", "10"}]}], "}"}]}], "}"}], ",", "h"}], 
   "]"}]}]}], "Input",
 CellChangeTimes->{{3.664983283974041*^9, 3.664983310669672*^9}, {
  3.664983356311029*^9, 3.664983361990349*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"0.9179773781578602`", ",", "0.075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.35711035855907414`", ",", "0.575`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10724034791563787`", ",", "1.075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.10938515487395063`", ",", "1.575`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03967892872878601`", ",", "2.075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.03860652524962963`", ",", "3.075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.05040296352034979`", ",", "4.075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.01608605218734568`", ",", "5.075`"}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{"0.021448069583127574`", ",", "6.075`"}], "}"}]}], 
  "}"}]], "Output",
 CellChangeTimes->{{3.664983295815054*^9, 3.664983311112068*^9}, {
  3.664983357191571*^9, 3.66498336270887*^9}}],

Cell[BoxData[
 TagBox[
  RowBox[{"FittedModel", "[", 
   TagBox[
    PanelBox[
     TagBox[
      RowBox[{"7.0246241187821195`", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", "16.75214224754289`"}], " ", "h"}]]}],
      Short[#, 2]& ],
     FrameMargins->5],
    Editable -> False], "]"}],
  InterpretTemplate[
  FittedModel[{
    "Nonlinear", {$CellContext`a -> 7.0246241187821195`, $CellContext`k -> 
      16.75214224754289}, {{$CellContext`h}, {$CellContext`a 
       E^(-$CellContext`h $CellContext`k)}}}, {1}, {{0.9179773781578602, 
    0.075}, {0.35711035855907414`, 0.575}, {0.10724034791563787`, 1.075}, {
    0.10938515487395063`, 1.575}, {0.03967892872878601, 2.075}, {
    0.03860652524962963, 3.075}, {0.05040296352034979, 4.075}, {
    0.01608605218734568, 5.075}, {0.021448069583127574`, 6.075}}, 
    Function[Null, 
     Internal`LocalizedBlock[{$CellContext`a, $CellContext`h, \
$CellContext`k}, #], {HoldAll}]]& ],
  Editable->False,
  SelectWithContents->True,
  Selectable->True]], "Output",
 CellChangeTimes->{{3.664983295815054*^9, 3.664983311112068*^9}, {
  3.664983357191571*^9, 3.664983362718569*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PlotFit", " ", "=", " ", 
  RowBox[{"Plot", "[", 
   RowBox[{
    TagBox[
     RowBox[{"7.0246241160997736`", " ", 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "16.752142234943413`"}], " ", "h"}]]}],
     Short[#, 2]& ], ",", " ", 
    RowBox[{"{", 
     RowBox[{"h", ",", "0.01", ",", "1"}], "}"}], ",", 
    RowBox[{"PlotRange", "\[Rule]", "All"}], ",", 
    RowBox[{"AxesOrigin", "\[Rule]", 
     RowBox[{"{", 
      RowBox[{"0", ",", "0"}], "}"}]}]}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{"Show", "[", 
  RowBox[{"{", 
   RowBox[{"PlotPts", ",", "PlotFit"}], "}"}], "]"}]}], "Input",
 CellChangeTimes->{{3.6649833194501133`*^9, 3.664983339905571*^9}, {
  3.664983370395117*^9, 3.664983460148734*^9}, {3.664983496112329*^9, 
  3.6649834985633783`*^9}}],

Cell[BoxData[
 GraphicsBox[{{}, {}, 
   {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
    1.], LineBox[CompressedData["
1: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
L0/KQS0yAqhDNh62skBSMsF6ryEZLls0HN7SLIgfyPhD40DGjmRRd+5NZrgd
K9/dF0PGqCPb1tsCRjA+TVS+FkeGHRs722oEI6JGPP/reEmG3lDJ2VsOjMh7
qjTWnEyG/bZiiTYJRsyPNqRVviUjPV/xTdFrBlwP7JLNqiSjXvPQk4xEepwg
z2k9nCODuytE1j2PFt2VulxHFsmw2bfL0DOcFndf1vVOLv/jao/Dcx1pkaGT
qnfpBxlyp14dfnGcFnsbjY13UkzjyttkyYeFNKDI7rXO3DkNN5PdndfqqVHn
XOPVQ5oGMRfJmE1HBbNrx5WenpmGoNl557GFbaA8mkyrcG4ah75SZcq1b/vX
V4+eJClPg6lA2Es7bhuybigE21ybxhGf3+fUj29DyJm8GCrrafy448FJb00J
7e1J7yWfT6OxvY1Vg7xFlN6nyMuLnobEVRbd68VbhND4jfwTL/7l4zLQGx22
RXzN3/PpTOI0dDp/65Zgi/AziqjWzpyGSG2Vb9CLv0RRrl/Pw7JpSA/Fft1j
tEnwXrfb/DI9jWq3DS/67X8I7+rmratz04h16+y/M7tOzEmIbetfmAaZtoaK
sWad+Eg1Szv5bRo9XuNdnx+uE2pvTNh+/5lG15N97WY/1ghPimuCfGwzWEov
mmaa/U1MpcpftJebgeOq4BHrrz8Jz/NlqTMnZ+Chm2vT1f6T4J05TW2sMIOo
N4MdZh9+EtdEzpepK86gLl9N74fLT6ImU/34UZUZzAf3UfXS/STSsm/x/zSc
gdDxi1+dD/0grItC1lx9Z/Dxy/0TS17fCXq9HdqrT2bw1jmJvtLyO5H8JyLP
OmAGpPGdavnq34kh+Vg7g9AZsKv4JGzt/05cLkuZImJnMCi6vZytdIWQqi5q
o3w3gxCStxUDxQqx2jyZ7ts9A6VD8z6KMV+Jlz9WI4/3zcDIK3Ang9dX4tI+
Gu+JgRmkh87yf7X6x62Fb2BsBtTy5//wEv840y2OX/MzWJ+zD/5Ru0wkXph2
uUU5i5uXI6PorZaIy1Wzykpis1C16vttOzRPrM2tyX2XmIWxt4qtY/48kczB
eCBRehY57UKW2cH/uLEoxabMLIJsdasbFP9xCqu8vNOzeOqo/dkjc474o7Cw
V0h7Fqt930zfP54l0gqWFrd5zuLszuccx02mib22S3u8vGdx4+0D/awz00So
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
DJ9Q301nymjif4uPR4w=
     "]]}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0., 0.},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{"DefaultBoundaryStyle" -> Automatic, "ScalingFunctions" -> None},
  PlotRange->{All, All},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.05], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.664983295815054*^9, 3.664983340451272*^9}, {
   3.664983405681837*^9, 3.6649834132975283`*^9}, {3.664983449835073*^9, 
   3.664983460541902*^9}, 3.6649834989806757`*^9}],

Cell[BoxData[
 GraphicsBox[{{{}, {{}, 
     {RGBColor[0.368417, 0.506779, 0.709798], PointSize[
      0.019444444444444445`], AbsoluteThickness[1.6], 
      PointBox[{{0.9179773781578602, 0.075}, {0.35711035855907414`, 0.575}, {
       0.10724034791563787`, 1.075}, {0.10938515487395063`, 1.575}, {
       0.03967892872878601, 2.075}, {0.03860652524962963, 3.075}, {
       0.05040296352034979, 4.075}, {0.01608605218734568, 5.075}, {
       0.021448069583127574`, 6.075}}]}, {}}, {}}, {{}, {}, 
    {RGBColor[0.368417, 0.506779, 0.709798], AbsoluteThickness[1.6], Opacity[
     1.], LineBox[CompressedData["
1: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
L0/KQS0yAqhDNh62skBSMsF6ryEZLls0HN7SLIgfyPhD40DGjmRRd+5NZrgd
K9/dF0PGqCPb1tsCRjA+TVS+FkeGHRs722oEI6JGPP/reEmG3lDJ2VsOjMh7
qjTWnEyG/bZiiTYJRsyPNqRVviUjPV/xTdFrBlwP7JLNqiSjXvPQk4xEepwg
z2k9nCODuytE1j2PFt2VulxHFsmw2bfL0DOcFndf1vVOLv/jao/Dcx1pkaGT
qnfpBxlyp14dfnGcFnsbjY13UkzjyttkyYeFNKDI7rXO3DkNN5PdndfqqVHn
XOPVQ5oGMRfJmE1HBbNrx5WenpmGoNl557GFbaA8mkyrcG4ah75SZcq1b/vX
V4+eJClPg6lA2Es7bhuybigE21ybxhGf3+fUj29DyJm8GCrrafy448FJb00J
7e1J7yWfT6OxvY1Vg7xFlN6nyMuLnobEVRbd68VbhND4jfwTL/7l4zLQGx22
RXzN3/PpTOI0dDp/65Zgi/AziqjWzpyGSG2Vb9CLv0RRrl/Pw7JpSA/Fft1j
tEnwXrfb/DI9jWq3DS/67X8I7+rmratz04h16+y/M7tOzEmIbetfmAaZtoaK
sWad+Eg1Szv5bRo9XuNdnx+uE2pvTNh+/5lG15N97WY/1ghPimuCfGwzWEov
mmaa/U1MpcpftJebgeOq4BHrrz8Jz/NlqTMnZ+Chm2vT1f6T4J05TW2sMIOo
N4MdZh9+EtdEzpepK86gLl9N74fLT6ImU/34UZUZzAf3UfXS/STSsm/x/zSc
gdDxi1+dD/0grItC1lx9Z/Dxy/0TS17fCXq9HdqrT2bw1jmJvtLyO5H8JyLP
OmAGpPGdavnq34kh+Vg7g9AZsKv4JGzt/05cLkuZImJnMCi6vZytdIWQqi5q
o3w3gxCStxUDxQqx2jyZ7ts9A6VD8z6KMV+Jlz9WI4/3zcDIK3Ang9dX4tI+
Gu+JgRmkh87yf7X6x62Fb2BsBtTy5//wEv840y2OX/MzWJ+zD/5Ru0wkXph2
uUU5i5uXI6PorZaIy1Wzykpis1C16vttOzRPrM2tyX2XmIWxt4qtY/48kczB
eCBRehY57UKW2cH/uLEoxabMLIJsdasbFP9xCqu8vNOzeOqo/dkjc474o7Cw
V0h7Fqt930zfP54l0gqWFrd5zuLszuccx02mib22S3u8vGdx4+0D/awz00So
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
DJ9Q301nymjif4uPR4w=
      "]]}}},
  AspectRatio->NCache[GoldenRatio^(-1), 0.6180339887498948],
  Axes->{True, True},
  AxesLabel->{None, None},
  AxesOrigin->{0, 0},
  DisplayFunction->Identity,
  Frame->{{False, False}, {False, False}},
  FrameLabel->{{None, None}, {None, None}},
  FrameTicks->{{Automatic, Automatic}, {Automatic, Automatic}},
  GridLines->{None, None},
  GridLinesStyle->Directive[
    GrayLevel[0.5, 0.4]],
  Method->{},
  PlotRange->{{0., 0.9179773781578602}, {0., 6.075}},
  PlotRangeClipping->True,
  PlotRangePadding->{{
     Scaled[0.02], 
     Scaled[0.02]}, {
     Scaled[0.02], 
     Scaled[0.05]}},
  Ticks->{Automatic, Automatic}]], "Output",
 CellChangeTimes->{{3.664983295815054*^9, 3.664983340451272*^9}, {
   3.664983405681837*^9, 3.6649834132975283`*^9}, {3.664983449835073*^9, 
   3.664983460541902*^9}, 3.664983498993371*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"r", " ", "=", " ", "1"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"Manipulate", "[", "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"w", " ", "=", " ", "0.1"}], 
       RowBox[{"(*", 
        RowBox[{
         RowBox[{"width", " ", "of", " ", "robot"}], ","}], "*)"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ws", " ", "=", " ", "0.05"}], ",", 
       RowBox[{"(*", " ", 
        RowBox[{"screen", " ", "is", " ", "s", "*", "s"}], "*)"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"h", " ", "=", " ", "2"}]}], " ", 
      RowBox[{"(*", 
       RowBox[{
       "distance", " ", "screen", " ", "is", " ", "below", " ", "the", " ", 
        "quadcopter"}], "*)"}], "\[IndentingNewLine]", "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"Graphics", "[", 
      RowBox[{"{", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"Black", ",", " ", 
          RowBox[{"Rectangle", "[", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{
              RowBox[{"-", "r"}], ",", 
              RowBox[{
               RowBox[{"-", "w"}], "/", "2"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"r", ",", 
              RowBox[{"w", "/", "2"}]}], "}"}]}], "]"}], ",", 
          "\[IndentingNewLine]", "White", ",", 
          RowBox[{"Text", "[", 
           RowBox[{"\"\<Quadcopter\>\"", ",", 
            RowBox[{"{", 
             RowBox[{"0", ",", "0"}], "}"}]}], "]"}]}], "\[IndentingNewLine]",
          "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"(*", "screen", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"Rotate", "[", 
          RowBox[{
           RowBox[{"{", 
            RowBox[{"Yellow", ",", 
             RowBox[{"EdgeForm", "[", "Black", "]"}], ",", " ", 
             RowBox[{"Rectangle", "[", 
              RowBox[{
               RowBox[{"{", 
                RowBox[{
                 RowBox[{
                  RowBox[{"-", "s"}], "/", "2"}], ",", 
                 RowBox[{
                  RowBox[{
                   RowBox[{"-", "ws"}], "/", "2"}], "-", "h"}]}], "}"}], ",", 
               
               RowBox[{"{", 
                RowBox[{
                 RowBox[{"s", "/", "2"}], ",", 
                 RowBox[{
                  RowBox[{"ws", "/", "2"}], "-", "h"}]}], "}"}]}], "]"}], ",",
              "Black", ",", 
             RowBox[{"Text", "[", 
              RowBox[{"\"\<Screen\>\"", ",", 
               RowBox[{"{", 
                RowBox[{"0", ",", 
                 RowBox[{"-", "h"}]}], "}"}]}], "]"}]}], "}"}], ",", 
           RowBox[{"-", "\[Theta]"}]}], "]"}], "\[IndentingNewLine]", "}"}]}],
        "\[IndentingNewLine]", "\[IndentingNewLine]", "}"}], "]"}]}], "]"}], 
   ",", " ", 
   RowBox[{"{", 
    RowBox[{"\[Theta]", ",", "0", ",", 
     RowBox[{"\[Pi]", "/", "2"}]}], "}"}], ",", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"s", ",", "1.5"}], "}"}], ",", "0.1", ",", " ", 
     RowBox[{"2", " ", "r"}]}], "}"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.664558485782897*^9, 3.664558622517221*^9}, {
  3.6645586778150663`*^9, 3.6645586927279167`*^9}, {3.664558734757204*^9, 
  3.6645589467887783`*^9}, {3.664559361693611*^9, 3.66455945962982*^9}, {
  3.664559784522573*^9, 3.6645598790038643`*^9}, {3.664886062235759*^9, 
  3.6648861599909487`*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   DynamicModuleBox[{$CellContext`s$$ = 1.5, $CellContext`\[Theta]$$ = 
    0.562345084992573, Typeset`show$$ = True, Typeset`bookmarkList$$ = {}, 
    Typeset`bookmarkMode$$ = "Menu", Typeset`animator$$, Typeset`animvar$$ = 
    1, Typeset`name$$ = "\"untitled\"", Typeset`specs$$ = {{
      Hold[$CellContext`\[Theta]$$], 0, Rational[1, 2] Pi}, {{
       Hold[$CellContext`s$$], 1.5}, 0.1, 2}}, Typeset`size$$ = {
    353., {214., 218.}}, Typeset`update$$ = 0, Typeset`initDone$$, 
    Typeset`skipInitDone$$ = True, $CellContext`\[Theta]$3215$$ = 
    0, $CellContext`s$3216$$ = 0}, 
    DynamicBox[Manipulate`ManipulateBoxes[
     1, StandardForm, 
      "Variables" :> {$CellContext`s$$ = 1.5, $CellContext`\[Theta]$$ = 0}, 
      "ControllerVariables" :> {
        Hold[$CellContext`\[Theta]$$, $CellContext`\[Theta]$3215$$, 0], 
        Hold[$CellContext`s$$, $CellContext`s$3216$$, 0]}, 
      "OtherVariables" :> {
       Typeset`show$$, Typeset`bookmarkList$$, Typeset`bookmarkMode$$, 
        Typeset`animator$$, Typeset`animvar$$, Typeset`name$$, 
        Typeset`specs$$, Typeset`size$$, Typeset`update$$, Typeset`initDone$$,
         Typeset`skipInitDone$$}, "Body" :> 
      Module[{$CellContext`w$ = 0.1, $CellContext`ws$ = 0.05, 
         Null$, $CellContext`h$ = 2}, 
        Graphics[{{Black, 
           
           Rectangle[{-$CellContext`r, (-$CellContext`w$)/
             2}, {$CellContext`r, $CellContext`w$/2}], White, 
           Text["Quadcopter", {0, 0}]}, {
           Rotate[{Yellow, 
             EdgeForm[Black], 
             
             Rectangle[{(-$CellContext`s$$)/
               2, (-$CellContext`ws$)/2 - $CellContext`h$}, {$CellContext`s$$/
               2, $CellContext`ws$/2 - $CellContext`h$}], Black, 
             Text[
             "Screen", {0, -$CellContext`h$}]}, -$CellContext`\[Theta]$$]}}]],
       "Specifications" :> {{$CellContext`\[Theta]$$, 0, Rational[1, 2] 
         Pi}, {{$CellContext`s$$, 1.5}, 0.1, 2}}, "Options" :> {}, 
      "DefaultOptions" :> {}],
     ImageSizeCache->{398., {272., 277.}},
     SingleEvaluation->True],
    Deinitialization:>None,
    DynamicModuleValues:>{},
    SynchronousInitialization->True,
    UndoTrackedVariables:>{Typeset`show$$, Typeset`bookmarkMode$$},
    UnsavedVariables:>{Typeset`initDone$$},
    UntrackedVariables:>{Typeset`size$$}], "Manipulate",
   Deployed->True,
   StripOnInput->False],
  Manipulate`InterpretManipulate[1]]], "Output",
 CellChangeTimes->{{3.664558740333131*^9, 3.664558788629822*^9}, 
   3.6645589337304373`*^9, {3.664559370869008*^9, 3.66455945986099*^9}, {
   3.664559779872459*^9, 3.6645598469227962`*^9}, 3.664559880317761*^9, 
   3.664886029850312*^9, {3.664886133017735*^9, 3.664886160541415*^9}}]
}, Open  ]]
}, Open  ]]
}, Open  ]]
},
WindowSize->{546, 631},
WindowMargins->{{Automatic, 17}, {Automatic, 0}},
FrontEndVersion->"10.0 for Mac OS X x86 (32-bit, 64-bit Kernel) (September 9, \
2014)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[400, 13, 526, 15, 220, "Text"],
Cell[CellGroupData[{
Cell[951, 32, 397, 8, 157, "Section"],
Cell[1351, 42, 1659, 52, 238, "Text"],
Cell[CellGroupData[{
Cell[3035, 98, 2850, 69, 300, "Input"],
Cell[5888, 169, 205, 3, 28, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[6130, 177, 199, 4, 28, "Input"],
Cell[6332, 183, 114, 1, 28, "Output"]
}, Open  ]],
Cell[6461, 187, 187, 4, 28, "Input"],
Cell[6651, 193, 3513, 88, 335, "Input"],
Cell[CellGroupData[{
Cell[10189, 285, 2297, 58, 285, "Input"],
Cell[12489, 345, 86994, 1567, 296, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[99520, 1917, 288, 5, 94, "Subsection"],
Cell[CellGroupData[{
Cell[99833, 1926, 3952, 103, 522, "Input"],
Cell[103788, 2031, 1237, 30, 249, "Output"],
Cell[105028, 2063, 1239, 30, 244, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[106304, 2098, 847, 25, 46, "Input"],
Cell[107154, 2125, 917, 23, 63, "Output"],
Cell[108074, 2150, 1168, 29, 44, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[109279, 2184, 819, 21, 74, "Input"],
Cell[110101, 2207, 13494, 232, 242, "Output"],
Cell[123598, 2441, 13919, 239, 249, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[137554, 2685, 3491, 88, 318, "Input"],
Cell[141048, 2775, 2770, 55, 566, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]]
}
]
*)

